#!/bin/bash
# ADD -vx after bash to echo expanded script
# or set -x/+x later

# VARIABLES ==========

RED='\033[0;31m'
CYAN='\033[1;36m'
NC='\033[0m'
input="ENTER"

# FUNCTIONS ==========

function pause {
  echo -e "${CYAN}Press [ENTER] to Continue${NC}"
  echo -e "(or [ESC] to return)\n"
  read -N 10000000 -t 0.01
  read -n 1 -s -r input
  case $input in
    $'\e')
      menu
    ;;
  esac
}

function completed {
  echo -e "${CYAN}Press [ENTER] to Continue${NC}"
  read -N 10000000 -t 0.01
  read -n 1 -s -r input
  case $input in
    $'\e')
      menu
    ;;
  esac
}

function one {
  clear
  echo -e "\n1) Initialization Wizard\n"
  if [[ ( -s $HOME/.bizhost ) ]]; then
    printf "Current Host Name: "
    echo -e ${CYAN}$(cat $HOME/.bizhost)${NC}
  fi
  echo -e "\n(leave empty to skip)"
  read -p "Enter New Host Name: " bizhost
  if [[ ! ( -z "$bizhost" ) ]]; then
    echo -e "$bizhost" > $HOME/.bizhost
    if [[ ( -s $HOME/.bizhost ) ]]; then
      printf "\nUpdated Host Name: "
      echo -e "${CYAN}$(cat $HOME/.bizhost)${NC}\n"
    fi
  else
    printf "\nRetained Host Name: "
    echo -e "${CYAN}$(cat $HOME/.bizhost)${NC}\n"
  fi

  pause
  sudo apt-get update
  sudo apt-get upgrade

  echo -e "\nOperation Complete..."
  completed
  menu
}

function two {
  clear
  echo -e "\n2) Installation Wizard\n"
  sudo apt-get install -y figlet
  echo -e "\nOperation Complete..."
  completed
  menu
}

function three {
  clear
  echo -e "\n3) Backup Wizard\n"
  bizbak $HOME/bizbin
  bizbak $HOME/biznotes
  bizbak $HOME/.bizbash
  echo -e "\nOperation Complete..."
  completed
  menu
}

function finish {
stty echo
# restore screen
echo -e "\e[?1049l"
read -N 10000000 -t 0.01
exec bash
exit 0
}

function menu {
clear
figlet "BizNet"
echo -e " ** ${CYAN}BizNet Setup Script${NC} **\n"

echo "1) Initialization Wizard"
echo "2) Installation Wizard"
echo "3) Backup Wizard"
echo "X) Exit"

echo -e "\nMake a Selection\n"
input
}

function input {
read -N 10000000 -t 0.01
read -n 1 -s -r input
case $input in
  1)
    one
  ;;
  2)
    two
  ;;
  3)
    three
  ;;
  $'\e[A')
    # THIS IS NOT WORKING TO CAPTURE ARROW KEYS without -n 2
    stty -echo
    echo -e "${RED} <<<Invalid>>>${NC}"
    # Beep
    echo -e "\a"
    sleep 0.5
    stty echo
    menu
  ;;
  x|X|$'\e')
    finish
  ;;
  *)
    stty -echo
    echo -e "${RED} <<<Invalid>>>${NC}"
    # Beep
    echo -e "\a"
    sleep 0.2
    stty echo
    menu
  ;;
esac
}

# EXECUTE ==========

# save screen
echo -e "\e[?1049h"

# draw menu
menu

# ERROR ==========

# restore screen and exit
echo "ERROR - This should not have happened"
echo -e "\e[?1049l"
read -N 10000000 -t 0.01
exec bash
exit 1
